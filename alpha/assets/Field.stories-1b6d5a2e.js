import{j as n}from"./jsx-runtime-ffb262ed.js";import{C as j}from"./CharInput-2c04e066.js";import{A as q,F as E}from"./Field-2cd6e552.js";import{B as I}from"./BaseField.argTypes-d72d00ba.js";import"./index-76fb7be0.js";import"./_commonjsHelpers-de833af9.js";import"./styled-components.browser.esm-837c5936.js";import"./index-86654eeb.js";import"./genStyleUtils-4eaa55a5.js";import"./assertThisInitialized-11245cea.js";import"./index-0a5b12e1.js";import"./index-95593828.js";import"./index-da03a860.js";import"./context-13a51095.js";import"./wrapNativeSuper-e3a961e5.js";import"./index-bde92207.js";import"./compact-item-2b086764.js";import"./LoadingOutlined-722c611a.js";import"./AntdIcon-24fbe913.js";import"./index-c0ac072d.js";import"./TextArea-e8e3a399.js";import"./CloseCircleFilled-2df2155f.js";import"./CloseCircleFilled-257b815e.js";import"./useVariants-af39c24c.js";import"./useCSSVarCls-aaef417d.js";import"./Compact-f37358d5.js";import"./roundedArrow-b7d508f7.js";import"./SearchOutlined-26e8fa80.js";import"./SearchOutlined-11b57711.js";import"./EyeInvisibleOutlined-4021859d.js";import"./reactNode-9d24d027.js";import"./button-49751c25.js";import"./index-7367e026.js";import"./theme-ac0bd082.js";import"./Label-5306f0c8.js";import"./QuestionCircleOutlined-35a42c77.js";import"./AntdIcon-16889e64.js";import"./index-1db4924e.js";import"./motion-892812ba.js";import"./LocaleContext-7544963d.js";import"./collapse-97de76d4.js";import"./row-0e75f3e7.js";import"./useLocale-5eb46448.js";import"./CheckCircleFilled-6dfa65f4.js";import"./CheckCircleFilled-1392c7ce.js";import"./ExclamationCircleFilled-04a5fe30.js";import"./ExclamationCircleFilled-eba6e68e.js";const l="Field",S=["* **`text`**: `string`. Text to show inside the label","* **`tooltip`**: `string`. Description of the tooltip. Hidden by default","* **`layout`**: `vertical` | `horizontal`. Show label and field inline (horizontal) or vertically separated. Default `horizontal`","* **`alignLabel`**: `left` | `center` | `right`. Only applies when field is in vertical mode. Alignment of the label. Default `horizontal`"],T=["* **`type`**: `string | number | array | ...`. Primitive type of the field. More type to ref [here](https://github.com/yiminghe/async-validator#type).","* **`validator`**: `(value: any) => Promise<void | any> | void>`. Function that receives the value and throw error if validation doesn't pass"],_e={title:"Work in progress/Form/Field",component:j,argTypes:{...I,name:{description:"Name or unique key of the field for referencing it while inside a form",table:{category:l}},valuePropName:{description:"Props of children node, for example, the prop of a Checkbox is 'checked'",table:{defaultValue:{summary:"value"},category:l}},labelOpts:{description:S.join(`
`),table:{category:l}},validatorOpts:{description:T.join(`
`),table:{category:l}},isPassword:{table:{disable:!0}}}},e=p=>n.jsx(q,{children:n.jsx(E,{...p,children:n.jsx(j,{...p})})}),r=e.bind({});r.args={name:"field_id",required:!1,readOnly:!1};const a=e.bind({});a.args={name:"field_id",labelOpts:{text:"Example form field"},required:!1,readOnly:!1};const t=e.bind({});t.args={name:"field_id",labelOpts:{text:"Example form field",tooltip:"Tooltip value"},required:!1,readOnly:!1};const i=e.bind({});i.args={name:"field_id",labelOpts:{text:"Example form field",layout:"vertical",align:"left"},required:!1,readOnly:!1};const o=e.bind({});o.args={name:"field_id",labelOpts:{text:"Example form field",layout:"vertical",align:"center"},required:!1,readOnly:!1};const s=e.bind({});s.args={name:"field_id",labelOpts:{text:"Example form field",layout:"vertical",align:"right"},required:!1,readOnly:!1};var m,d,c;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`args => <Form>
    <Field {...args}>
      <CharInput {...args} />
    </Field>
  </Form>`,...(c=(d=r.parameters)==null?void 0:d.docs)==null?void 0:c.source}}};var f,u,g;a.parameters={...a.parameters,docs:{...(f=a.parameters)==null?void 0:f.docs,source:{originalSource:`args => <Form>
    <Field {...args}>
      <CharInput {...args} />
    </Field>
  </Form>`,...(g=(u=a.parameters)==null?void 0:u.docs)==null?void 0:g.source}}};var h,b,F;t.parameters={...t.parameters,docs:{...(h=t.parameters)==null?void 0:h.docs,source:{originalSource:`args => <Form>
    <Field {...args}>
      <CharInput {...args} />
    </Field>
  </Form>`,...(F=(b=t.parameters)==null?void 0:b.docs)==null?void 0:F.source}}};var y,x,v;i.parameters={...i.parameters,docs:{...(y=i.parameters)==null?void 0:y.docs,source:{originalSource:`args => <Form>
    <Field {...args}>
      <CharInput {...args} />
    </Field>
  </Form>`,...(v=(x=i.parameters)==null?void 0:x.docs)==null?void 0:v.source}}};var O,B,L;o.parameters={...o.parameters,docs:{...(O=o.parameters)==null?void 0:O.docs,source:{originalSource:`args => <Form>
    <Field {...args}>
      <CharInput {...args} />
    </Field>
  </Form>`,...(L=(B=o.parameters)==null?void 0:B.docs)==null?void 0:L.source}}};var C,W,_;s.parameters={...s.parameters,docs:{...(C=s.parameters)==null?void 0:C.docs,source:{originalSource:`args => <Form>
    <Field {...args}>
      <CharInput {...args} />
    </Field>
  </Form>`,...(_=(W=s.parameters)==null?void 0:W.docs)==null?void 0:_.source}}};const je=["Basic","BasicWithLabel","BasicWithLabelAndTooltip","BasicWithLabelVerticalLeft","BasicWithLabelVerticalCenter","BasicWithLabelVerticalRight"];export{r as Basic,a as BasicWithLabel,t as BasicWithLabelAndTooltip,o as BasicWithLabelVerticalCenter,i as BasicWithLabelVerticalLeft,s as BasicWithLabelVerticalRight,je as __namedExportsOrder,_e as default};
