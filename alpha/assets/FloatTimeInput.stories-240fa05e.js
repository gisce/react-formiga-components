import{j as q}from"./jsx-runtime-f6d73c06.js";import{r as l}from"./index-8ee6c85d.js";import{p as x,a as C}from"./FloatTime.helper-f755c1c2.js";import{s as I}from"./styled-components.browser.esm-f33cca5c.js";import{R}from"./Field-d4acf822.js";import{I as B}from"./index-33abafc5.js";import{B as N}from"./BaseField.argTypes-d72d00ba.js";import"./_commonjsHelpers-de833af9.js";import"./index-d0686b25.js";import"./assertThisInitialized-601f600e.js";import"./index-8eb238e3.js";import"./Label-1f509d27.js";import"./index-c0c995ae.js";import"./toArray-702c099d.js";import"./isVisible-10508b7a.js";import"./index-ebc937d3.js";import"./motion-343f592f.js";import"./roundedArrow-12957d20.js";import"./reactNode-b58523ea.js";import"./Compact-190860f8.js";import"./LocaleContext-58eb36ec.js";import"./context-b943a423.js";import"./asyncToGenerator-738c820e.js";import"./omit-05916825.js";import"./collapse-97de76d4.js";import"./useCSSVarCls-2e83a7af.js";import"./row-556c4485.js";import"./useLocale-e5a33693.js";import"./CheckCircleFilled-8092a51e.js";import"./CloseCircleFilled-2f02bec5.js";import"./ExclamationCircleFilled-e0925294.js";import"./compact-item-4a97683c.js";import"./index-a92188ed.js";import"./useVariants-fa326d5c.js";import"./SearchOutlined-98c63492.js";import"./button-2157679a.js";import"./index-077eff47.js";const i=I(B)`
  width: 100%;
`,d=I(i)`
  ${R}
`;try{i.displayName="Input",i.__docgenInfo={description:"",displayName:"Input",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}}}catch{}try{d.displayName="RequiredInput",d.__docgenInfo={description:"",displayName:"RequiredInput",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}}}catch{}const p=e=>{const{readOnly:u,required:o,value:t,onChange:a}=e,T=o&&!u?d:i,b=l.useRef(),[m,c]=l.useState();l.useEffect(()=>{c(x(t))},[t]);const F=s=>{a==null||a(s)};function E(s){b.current=s.target.value,c(s.target.value)}function S(){F(C(m))}return q.jsx(T,{value:m,disabled:u,placeholder:"00:00",onChange:E,onBlur:S})};try{p.displayName="FloatTimeInput",p.__docgenInfo={description:"",displayName:"FloatTimeInput",props:{locale:{defaultValue:null,description:"",name:"locale",required:!1,type:{name:"enum",value:[{value:'"en_US"'},{value:'"es_ES"'},{value:'"ca_ES"'}]}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: number) => void)"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void)"}}}}}catch{}const ye={title:"Work in progress/Widgets/FloatTime/FloatTimeInput",component:p,argTypes:{...N,locale:{table:{disable:!0}}}},h=e=>{const[u,o]=l.useState(e.value);return l.useEffect(()=>{o(e.value)},[e.value]),q.jsx(p,{...e,value:u,onChange:t=>{var a;o(t),(a=e.onChange)==null||a.call(e,t)}})},r=h.bind({});r.args={required:!1,readOnly:!1};const n=h.bind({});n.args={required:!1,readOnly:!1,value:2.5};var f,v,y;r.parameters={...r.parameters,docs:{...(f=r.parameters)==null?void 0:f.docs,source:{originalSource:`args => {
  const [value, setValue] = useState(args.value);
  useEffect(() => {
    setValue(args.value);
  }, [args.value]);
  return <FloatTimeInput {...args} value={value} onChange={(value: number) => {
    setValue(value);
    args.onChange?.(value);
  }} />;
}`,...(y=(v=r.parameters)==null?void 0:v.docs)==null?void 0:y.source}}};var g,_,V;n.parameters={...n.parameters,docs:{...(g=n.parameters)==null?void 0:g.docs,source:{originalSource:`args => {
  const [value, setValue] = useState(args.value);
  useEffect(() => {
    setValue(args.value);
  }, [args.value]);
  return <FloatTimeInput {...args} value={value} onChange={(value: number) => {
    setValue(value);
    args.onChange?.(value);
  }} />;
}`,...(V=(_=n.parameters)==null?void 0:_.docs)==null?void 0:V.source}}};const ge=["Basic","WithValue"];export{r as Basic,n as WithValue,ge as __namedExportsOrder,ye as default};
